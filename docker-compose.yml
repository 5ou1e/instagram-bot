networks:
  insta_network:
    driver: bridge

services:
  postgres:
    image: "postgres:16-alpine"
    shm_size: 4g
    container_name: postgres-insta
    ports:
      - "5432:5432"
    volumes:
      - insta.postgres.data:/var/lib/postgresql/data
      - ./postgresql.conf:/etc/postgresql/postgresql.conf
    environment:
      POSTGRES_DB: ${DB__NAME}
      POSTGRES_USER: ${DB__USER}
      POSTGRES_PASSWORD: ${DB__PASSWORD}
      PGDATA: /var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "admin", "-d", "insta"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    command: -c config_file=/etc/postgresql/postgresql.conf
    networks:
      - insta_network

  api:
    build:
      context: ./backend
    container_name: api_insta
    env_file:
      - .env.docker
    command: "uvicorn src.api.main:app --host 0.0.0.0 --port 8000 --reload"
    volumes:
      - .:/app
    ports:
      - "${API__PORT}:8000"
    networks:
      - insta_network

  execution_service_api:
    build:
      context: ./backend
    container_name: api_insta_execution_service
    env_file:
      - .env.docker
    command: "uvicorn src.execution_service.api.main:app --host 0.0.0.0 --port 8000 --reload"
    volumes:
      - .:/app
    ports:
      - "8001:8000"
    networks:
      - insta_network


volumes:
  insta.postgres.data: {}

